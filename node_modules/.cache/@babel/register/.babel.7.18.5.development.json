{"{\"assumptions\":{},\"sourceRoot\":\"E:\\\\Belajar\\\\nodeJS_Batch_15\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Belajar\\\\nodeJS_Batch_15\",\"filename\":\"E:\\\\Belajar\\\\nodeJS_Batch_15\\\\server\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Belajar\\\\nodeJS_Batch_15\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_dotenv[\"default\"].config();\n\nvar Pool = require(\"pg\").Pool;\n\nvar pool = new Pool({\n  host: \"localhost\",\n  user: \"postgres\",\n  password: \"lisman1922\",\n  database: \"quiz1_database\",\n  port: 5432\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\nvar port = process.env.PORT || 3003;\napp.listen(port, function () {\n  console.info(\"Server listening on port \".concat(port));\n}); // app untuk regions\n\napp.get(\"/api/region/\", function (req, res) {\n  pool.query(\"select * from regions\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/region/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from regions where region_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/region/\", function (req, res) {\n  var region_name = req.body.region_name;\n  pool.query(\"insert into regions (region_name) values ($1)\", [region_name], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/region/:id\", function (req, res) {\n  var id = req.params.id;\n  var name = req.body.name;\n  pool.query(\"update regions set region_name=$1 where region_id=$2\", [name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/region/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from regions where region_id=$1 \", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // app countries\n\napp.get(\"/api/country\", function (req, res) {\n  pool.query(\"select * from countries\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/country/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from countries where country_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/country/\", function (req, res) {\n  var _req$body = req.body,\n      country_id = _req$body.country_id,\n      country_name = _req$body.country_name,\n      region_id = _req$body.region_id;\n  pool.query(\"insert into countries (country_id, country_name, region_id) values ($1,$2,$3)\", [country_id, country_name, region_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/country/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body2 = req.body,\n      country_id = _req$body2.country_id,\n      name = _req$body2.name,\n      region_id = _req$body2.region_id;\n  pool.query(\"update countries set country_id=$1, country_name=$2, region_id=$3 where country_id=$4\", [country_id, name, region_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/country/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from countries where country_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // app untuk  Locations\n\napp.get(\"/api/location/\", function (req, res) {\n  pool.query(\"select * from locations\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/location/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from locations where location_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/location/\", function (req, res) {\n  var _req$body3 = req.body,\n      location_id = _req$body3.location_id,\n      street_address = _req$body3.street_address,\n      postal_code = _req$body3.postal_code,\n      city = _req$body3.city,\n      state_province = _req$body3.state_province,\n      country_id = _req$body3.country_id;\n  pool.query(\"insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)\", [location_id, street_address, postal_code, city, state_province, country_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/location/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body4 = req.body,\n      location_id = _req$body4.location_id,\n      street_address = _req$body4.street_address,\n      postal_code = _req$body4.postal_code,\n      city = _req$body4.city,\n      state_province = _req$body4.state_province,\n      country_id = _req$body4.country_id;\n  pool.query(\"update locations set location_id=$1, street_address=$2, postal_code=$3, city=$4, state_province=$5, country_id=$6 where location_id=$7 \", [location_id, street_address, postal_code, city, state_province, country_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/location/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from locations where location_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // departments\n\napp.get(\"/api/department/\", function (req, res) {\n  pool.query(\"select * from departments\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/department/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from departments where department_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/department/\", function (req, res) {\n  var _req$body5 = req.body,\n      department_id = _req$body5.department_id,\n      department_name = _req$body5.department_name,\n      location_id = _req$body5.location_id;\n  pool.query(\"insert into departments (department_id, department_name, location_id) values ($1,$2,$3) \", [department_id, department_name, location_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/department/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body6 = req.body,\n      department_id = _req$body6.department_id,\n      department_name = _req$body6.department_name,\n      location_id = _req$body6.location_id;\n  pool.query(\"update departments set department_id=$1, department_name=$2, location_id=$3 where department_id=$4 \", [department_id, department_name, location_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/department/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from departments where department_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // jobs\n\napp.get(\"/api/job/\", function (req, res) {\n  pool.query(\"select * from jobs\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/job/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from jobs where job_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/job/\", function (req, res) {\n  var _req$body7 = req.body,\n      job_id = _req$body7.job_id,\n      min_salary = _req$body7.min_salary,\n      max_salary = _req$body7.max_salary,\n      job_title = _req$body7.job_title;\n  pool.query(\"insert into jobs (job_id, min_salary, max_salary, job_title) values ($1,$2,$3,$4)\", [job_id, min_salary, max_salary, job_title], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/job/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body8 = req.body,\n      job_id = _req$body8.job_id,\n      min_salary = _req$body8.min_salary,\n      max_salary = _req$body8.max_salary,\n      job_title = _req$body8.job_title;\n  pool.query(\"update jobs set job_id=$1, min_salary=$2, max_salary=$3, job_title=$4 where job_id=$5\", [job_id, min_salary, max_salary, job_title, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/job/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from jobs where job_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // dependents\n\napp.get(\"/api/dependent/\", function (req, res) {\n  pool.query(\"select * from dependents\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/dependent/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from dependents where dependent_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/dependent\", function (req, res) {\n  var _req$body9 = req.body,\n      dependent_id = _req$body9.dependent_id,\n      first_name = _req$body9.first_name,\n      last_name = _req$body9.last_name,\n      relationship = _req$body9.relationship,\n      employee_id = _req$body9.employee_id;\n  pool.query(\"insert into dependents (dependent_id, first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)\", [dependent_id, first_name, last_name, relationship, employee_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/dependent/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body10 = req.body,\n      dependent_id = _req$body10.dependent_id,\n      first_name = _req$body10.first_name,\n      last_name = _req$body10.last_name,\n      relationship = _req$body10.relationship,\n      employee_id = _req$body10.employee_id;\n  pool.query(\"update dependents set dependent_id=$1, first_name=$2, last_name=$3, relationship=$4, employee_id=$5 where dependent_id=$6\", [dependent_id, first_name, last_name, relationship, employee_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/dependent/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from dependents where dependent_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // employees\n\napp.get(\"/api/employee/\", function (req, res) {\n  pool.query(\"select * from employees\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/employee/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from employees where employee_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/employee/\", function (req, res) {\n  var _req$body11 = req.body,\n      employee_id = _req$body11.employee_id,\n      first_name = _req$body11.first_name,\n      last_name = _req$body11.last_name,\n      email = _req$body11.email,\n      phone_number = _req$body11.phone_number,\n      hire_date = _req$body11.hire_date,\n      job_id = _req$body11.job_id,\n      salary = _req$body11.salary,\n      manager_id = _req$body11.manager_id,\n      department_id = _req$body11.department_id;\n  pool.query(\"insert into employees (employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)\", [employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/employee/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body12 = req.body,\n      employee_id = _req$body12.employee_id,\n      first_name = _req$body12.first_name,\n      last_name = _req$body12.last_name,\n      email = _req$body12.email,\n      phone_number = _req$body12.phone_number,\n      hire_date = _req$body12.hire_date,\n      job_id = _req$body12.job_id,\n      salary = _req$body12.salary,\n      manager_id = _req$body12.manager_id,\n      department_id = _req$body12.department_id;\n  pool.query(\"update employees set employee_id=$1, first_name=$2, last_name=$3, email=$4, phone_number=$5, hire_date=$6, job_id=$7, salary=$8, manager_id=$9, department_id=$10 where employee_id=$11\", [employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/employee/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from employees where employee_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // projects\n\napp.get(\"/api/project\", function (req, res) {\n  pool.query(\"select * from projects\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/project/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from projects where proj_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/project/\", function (req, res) {\n  var _req$body13 = req.body,\n      proj_id = _req$body13.proj_id,\n      proj_name = _req$body13.proj_name,\n      proj_createdon = _req$body13.proj_createdon,\n      proj_duedate = _req$body13.proj_duedate,\n      proj_cust_name = _req$body13.proj_cust_name,\n      proj_description = _req$body13.proj_description,\n      proj_status = _req$body13.proj_status,\n      proj_amount = _req$body13.proj_amount,\n      proj_account_mgr = _req$body13.proj_account_mgr,\n      proj_customer = _req$body13.proj_customer;\n  pool.query(\"insert into projects ( proj_id, proj_name, proj_createdon, proj_duedate, proj_cust_name,proj_description, proj_status, proj_amount, proj_account_mgr, proj_customer ) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)\", [proj_id, proj_name, proj_createdon, proj_duedate, proj_cust_name, proj_description, proj_status, proj_amount, proj_account_mgr, proj_customer], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put(\"/api/project/:id\", function (req, res) {\n  var id = req.params.id;\n  var _req$body14 = req.body,\n      proj_id = _req$body14.proj_id,\n      proj_name = _req$body14.proj_name,\n      proj_createdon = _req$body14.proj_createdon,\n      proj_duedate = _req$body14.proj_duedate,\n      proj_cust_name = _req$body14.proj_cust_name,\n      proj_description = _req$body14.proj_description,\n      proj_status = _req$body14.proj_status,\n      proj_amount = _req$body14.proj_amount,\n      proj_account_mgr = _req$body14.proj_account_mgr,\n      proj_customer = _req$body14.proj_customer;\n  pool.query(\"update projects set proj_id=$1, proj_name=$2, proj_createdon=$3, proj_duedate=$4, proj_cust_name=$5, proj_description=$6, proj_status=$7, proj_amount=$8, proj_account_mgr=$9, proj_customer=$10 where proj_id=$11\", [proj_id, proj_name, proj_createdon, proj_duedate, proj_cust_name, proj_description, proj_status, proj_amount, proj_account_mgr, proj_customer, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"](\"/api/project/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from projects where proj_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n}); // Project Assigments\n\napp.get(\"/api/project_assignment/\", function (req, res) {\n  pool.query(\"select * from project_assignment\", [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get(\"/api/project_assignment/:id\", function (req, res) {\n  var id = req.params.id;\n  pool.query(\"select * from project_assignment where pras_proj_id=$1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post(\"/api/project_assignment/\", function (req, res) {\n  var _req$body15 = req.body,\n      pras_proj_id = _req$body15.pras_proj_id,\n      pras_employee_id = _req$body15.pras_employee_id,\n      pras_startdate = _req$body15.pras_startdate,\n      pras_enddate = _req$body15.pras_enddate,\n      pras_status = _req$body15.pras_status;\n  pool.query(\"insert into project_assignment (pras_proj_id, pras_employee_id, pras_startdate,pras_enddate, pras_status) values ($1,$2,$3,$4,$5)\", [pras_proj_id, pras_employee_id, pras_startdate, pras_enddate, pras_status], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJQb29sIiwicmVxdWlyZSIsInBvb2wiLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJwb3J0IiwiYXBwIiwiZXhwcmVzcyIsInVzZSIsImpzb24iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJpbmZvIiwiZ2V0IiwicmVxIiwicmVzIiwicXVlcnkiLCJlcnJvciIsInJlc3VsdCIsInN0YXR1cyIsInJvd3MiLCJpZCIsInBhcmFtcyIsInBvc3QiLCJyZWdpb25fbmFtZSIsImJvZHkiLCJyb3dDb3VudCIsInB1dCIsIm5hbWUiLCJjb3VudHJ5X2lkIiwiY291bnRyeV9uYW1lIiwicmVnaW9uX2lkIiwibG9jYXRpb25faWQiLCJzdHJlZXRfYWRkcmVzcyIsInBvc3RhbF9jb2RlIiwiY2l0eSIsInN0YXRlX3Byb3ZpbmNlIiwiZGVwYXJ0bWVudF9pZCIsImRlcGFydG1lbnRfbmFtZSIsImpvYl9pZCIsIm1pbl9zYWxhcnkiLCJtYXhfc2FsYXJ5Iiwiam9iX3RpdGxlIiwiZGVwZW5kZW50X2lkIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInJlbGF0aW9uc2hpcCIsImVtcGxveWVlX2lkIiwiZW1haWwiLCJwaG9uZV9udW1iZXIiLCJoaXJlX2RhdGUiLCJzYWxhcnkiLCJtYW5hZ2VyX2lkIiwicHJval9pZCIsInByb2pfbmFtZSIsInByb2pfY3JlYXRlZG9uIiwicHJval9kdWVkYXRlIiwicHJval9jdXN0X25hbWUiLCJwcm9qX2Rlc2NyaXB0aW9uIiwicHJval9zdGF0dXMiLCJwcm9qX2Ftb3VudCIsInByb2pfYWNjb3VudF9tZ3IiLCJwcm9qX2N1c3RvbWVyIiwicHJhc19wcm9qX2lkIiwicHJhc19lbXBsb3llZV9pZCIsInByYXNfc3RhcnRkYXRlIiwicHJhc19lbmRkYXRlIiwicHJhc19zdGF0dXMiXSwic291cmNlUm9vdCI6IkU6XFxCZWxhamFyXFxub2RlSlNfQmF0Y2hfMTVcXHNlcnZlclxcIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcclxuaW1wb3J0IGV4cHJlc3MsIHsgcXVlcnkgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBQb29sID0gcmVxdWlyZShcInBnXCIpLlBvb2w7XHJcbmNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7XHJcbiAgaG9zdDogXCJsb2NhbGhvc3RcIixcclxuICB1c2VyOiBcInBvc3RncmVzXCIsXHJcbiAgcGFzc3dvcmQ6IFwibGlzbWFuMTkyMlwiLFxyXG4gIGRhdGFiYXNlOiBcInF1aXoxX2RhdGFiYXNlXCIsXHJcbiAgcG9ydDogNTQzMixcclxufSk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMztcclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XHJcbiAgY29uc29sZS5pbmZvKGBTZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xyXG59KTtcclxuXHJcbi8vIGFwcCB1bnR1ayByZWdpb25zXHJcbmFwcC5nZXQoXCIvYXBpL3JlZ2lvbi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gcmVnaW9uc1wiLCBbXSwgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KFwiL2FwaS9yZWdpb24vOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSByZWdpb25zIHdoZXJlIHJlZ2lvbl9pZCA9ICQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoXCIvYXBpL3JlZ2lvbi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyByZWdpb25fbmFtZSB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gcmVnaW9ucyAocmVnaW9uX25hbWUpIHZhbHVlcyAoJDEpXCIsXHJcbiAgICBbcmVnaW9uX25hbWVdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnB1dChcIi9hcGkvcmVnaW9uLzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIGNvbnN0IHsgbmFtZSB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwidXBkYXRlIHJlZ2lvbnMgc2V0IHJlZ2lvbl9uYW1lPSQxIHdoZXJlIHJlZ2lvbl9pZD0kMlwiLFxyXG4gICAgW25hbWUsIGlkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dDb3VudCk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcbmFwcC5kZWxldGUoXCIvYXBpL3JlZ2lvbi86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJkZWxldGUgZnJvbSByZWdpb25zIHdoZXJlIHJlZ2lvbl9pZD0kMSBcIixcclxuICAgIFtpZF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5cclxuLy8gYXBwIGNvdW50cmllc1xyXG5hcHAuZ2V0KFwiL2FwaS9jb3VudHJ5XCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIHBvb2wucXVlcnkoXCJzZWxlY3QgKiBmcm9tIGNvdW50cmllc1wiLCBbXSwgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICB9KTtcclxufSk7XHJcbmFwcC5nZXQoXCIvYXBpL2NvdW50cnkvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSBjb3VudHJpZXMgd2hlcmUgY291bnRyeV9pZD0kMVwiLFxyXG4gICAgW2lkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnBvc3QoXCIvYXBpL2NvdW50cnkvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgY291bnRyeV9pZCwgY291bnRyeV9uYW1lLCByZWdpb25faWQgfSA9IHJlcS5ib2R5O1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcImluc2VydCBpbnRvIGNvdW50cmllcyAoY291bnRyeV9pZCwgY291bnRyeV9uYW1lLCByZWdpb25faWQpIHZhbHVlcyAoJDEsJDIsJDMpXCIsXHJcbiAgICBbY291bnRyeV9pZCwgY291bnRyeV9uYW1lLCByZWdpb25faWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnB1dChcIi9hcGkvY291bnRyeS86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBjb25zdCB7IGNvdW50cnlfaWQsIG5hbWUsIHJlZ2lvbl9pZCB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwidXBkYXRlIGNvdW50cmllcyBzZXQgY291bnRyeV9pZD0kMSwgY291bnRyeV9uYW1lPSQyLCByZWdpb25faWQ9JDMgd2hlcmUgY291bnRyeV9pZD0kNFwiLFxyXG4gICAgW2NvdW50cnlfaWQsIG5hbWUsIHJlZ2lvbl9pZCwgaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZShcIi9hcGkvY291bnRyeS86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJkZWxldGUgZnJvbSBjb3VudHJpZXMgd2hlcmUgY291bnRyeV9pZD0kMVwiLFxyXG4gICAgW2lkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dDb3VudCk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcblxyXG4vLyBhcHAgdW50dWsgIExvY2F0aW9uc1xyXG5hcHAuZ2V0KFwiL2FwaS9sb2NhdGlvbi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gbG9jYXRpb25zXCIsIFtdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gIH0pO1xyXG59KTtcclxuYXBwLmdldChcIi9hcGkvbG9jYXRpb24vOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSBsb2NhdGlvbnMgd2hlcmUgbG9jYXRpb25faWQ9JDFcIixcclxuICAgIFtpZF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93cyk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcbmFwcC5wb3N0KFwiL2FwaS9sb2NhdGlvbi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3Qge1xyXG4gICAgbG9jYXRpb25faWQsXHJcbiAgICBzdHJlZXRfYWRkcmVzcyxcclxuICAgIHBvc3RhbF9jb2RlLFxyXG4gICAgY2l0eSxcclxuICAgIHN0YXRlX3Byb3ZpbmNlLFxyXG4gICAgY291bnRyeV9pZCxcclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gbG9jYXRpb25zIChsb2NhdGlvbl9pZCwgc3RyZWV0X2FkZHJlc3MsIHBvc3RhbF9jb2RlLCBjaXR5LCBzdGF0ZV9wcm92aW5jZSwgY291bnRyeV9pZCkgdmFsdWVzICgkMSwkMiwkMywkNCwkNSwkNilcIixcclxuICAgIFtcclxuICAgICAgbG9jYXRpb25faWQsXHJcbiAgICAgIHN0cmVldF9hZGRyZXNzLFxyXG4gICAgICBwb3N0YWxfY29kZSxcclxuICAgICAgY2l0eSxcclxuICAgICAgc3RhdGVfcHJvdmluY2UsXHJcbiAgICAgIGNvdW50cnlfaWQsXHJcbiAgICBdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnB1dChcIi9hcGkvbG9jYXRpb24vOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgY29uc3Qge1xyXG4gICAgbG9jYXRpb25faWQsXHJcbiAgICBzdHJlZXRfYWRkcmVzcyxcclxuICAgIHBvc3RhbF9jb2RlLFxyXG4gICAgY2l0eSxcclxuICAgIHN0YXRlX3Byb3ZpbmNlLFxyXG4gICAgY291bnRyeV9pZCxcclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwidXBkYXRlIGxvY2F0aW9ucyBzZXQgbG9jYXRpb25faWQ9JDEsIHN0cmVldF9hZGRyZXNzPSQyLCBwb3N0YWxfY29kZT0kMywgY2l0eT0kNCwgc3RhdGVfcHJvdmluY2U9JDUsIGNvdW50cnlfaWQ9JDYgd2hlcmUgbG9jYXRpb25faWQ9JDcgXCIsXHJcbiAgICBbXHJcbiAgICAgIGxvY2F0aW9uX2lkLFxyXG4gICAgICBzdHJlZXRfYWRkcmVzcyxcclxuICAgICAgcG9zdGFsX2NvZGUsXHJcbiAgICAgIGNpdHksXHJcbiAgICAgIHN0YXRlX3Byb3ZpbmNlLFxyXG4gICAgICBjb3VudHJ5X2lkLFxyXG4gICAgICBpZCxcclxuICAgIF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAuZGVsZXRlKFwiL2FwaS9sb2NhdGlvbi86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJkZWxldGUgZnJvbSBsb2NhdGlvbnMgd2hlcmUgbG9jYXRpb25faWQ9JDFcIixcclxuICAgIFtpZF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5cclxuLy8gZGVwYXJ0bWVudHNcclxuYXBwLmdldChcIi9hcGkvZGVwYXJ0bWVudC9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gZGVwYXJ0bWVudHNcIiwgW10sIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93cyk7XHJcbiAgfSk7XHJcbn0pO1xyXG5hcHAuZ2V0KFwiL2FwaS9kZXBhcnRtZW50LzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcInNlbGVjdCAqIGZyb20gZGVwYXJ0bWVudHMgd2hlcmUgZGVwYXJ0bWVudF9pZD0kMVwiLFxyXG4gICAgW2lkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnBvc3QoXCIvYXBpL2RlcGFydG1lbnQvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgZGVwYXJ0bWVudF9pZCwgZGVwYXJ0bWVudF9uYW1lLCBsb2NhdGlvbl9pZCB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gZGVwYXJ0bWVudHMgKGRlcGFydG1lbnRfaWQsIGRlcGFydG1lbnRfbmFtZSwgbG9jYXRpb25faWQpIHZhbHVlcyAoJDEsJDIsJDMpIFwiLFxyXG4gICAgW2RlcGFydG1lbnRfaWQsIGRlcGFydG1lbnRfbmFtZSwgbG9jYXRpb25faWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnB1dChcIi9hcGkvZGVwYXJ0bWVudC86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBjb25zdCB7IGRlcGFydG1lbnRfaWQsIGRlcGFydG1lbnRfbmFtZSwgbG9jYXRpb25faWQgfSA9IHJlcS5ib2R5O1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcInVwZGF0ZSBkZXBhcnRtZW50cyBzZXQgZGVwYXJ0bWVudF9pZD0kMSwgZGVwYXJ0bWVudF9uYW1lPSQyLCBsb2NhdGlvbl9pZD0kMyB3aGVyZSBkZXBhcnRtZW50X2lkPSQ0IFwiLFxyXG4gICAgW2RlcGFydG1lbnRfaWQsIGRlcGFydG1lbnRfbmFtZSwgbG9jYXRpb25faWQsIGlkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dDb3VudCk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcbmFwcC5kZWxldGUoXCIvYXBpL2RlcGFydG1lbnQvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiZGVsZXRlIGZyb20gZGVwYXJ0bWVudHMgd2hlcmUgZGVwYXJ0bWVudF9pZD0kMVwiLFxyXG4gICAgW2lkXSxcclxuICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICB9XHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dDb3VudCk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcblxyXG4vLyBqb2JzXHJcbmFwcC5nZXQoXCIvYXBpL2pvYi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gam9ic1wiLCBbXSwgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICB9KTtcclxufSk7XHJcbmFwcC5nZXQoXCIvYXBpL2pvYi86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFwic2VsZWN0ICogZnJvbSBqb2JzIHdoZXJlIGpvYl9pZD0kMVwiLCBbaWRdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gIH0pO1xyXG59KTtcclxuYXBwLnBvc3QoXCIvYXBpL2pvYi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBqb2JfaWQsIG1pbl9zYWxhcnksIG1heF9zYWxhcnksIGpvYl90aXRsZSB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gam9icyAoam9iX2lkLCBtaW5fc2FsYXJ5LCBtYXhfc2FsYXJ5LCBqb2JfdGl0bGUpIHZhbHVlcyAoJDEsJDIsJDMsJDQpXCIsXHJcbiAgICBbam9iX2lkLCBtaW5fc2FsYXJ5LCBtYXhfc2FsYXJ5LCBqb2JfdGl0bGVdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLnB1dChcIi9hcGkvam9iLzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIGNvbnN0IHsgam9iX2lkLCBtaW5fc2FsYXJ5LCBtYXhfc2FsYXJ5LCBqb2JfdGl0bGUgfSA9IHJlcS5ib2R5O1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcInVwZGF0ZSBqb2JzIHNldCBqb2JfaWQ9JDEsIG1pbl9zYWxhcnk9JDIsIG1heF9zYWxhcnk9JDMsIGpvYl90aXRsZT0kNCB3aGVyZSBqb2JfaWQ9JDVcIixcclxuICAgIFtqb2JfaWQsIG1pbl9zYWxhcnksIG1heF9zYWxhcnksIGpvYl90aXRsZSwgaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZShcIi9hcGkvam9iLzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIHBvb2wucXVlcnkoXCJkZWxldGUgZnJvbSBqb2JzIHdoZXJlIGpvYl9pZD0kMVwiLCBbaWRdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICB9KTtcclxufSk7XHJcblxyXG4vLyBkZXBlbmRlbnRzXHJcbmFwcC5nZXQoXCIvYXBpL2RlcGVuZGVudC9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gZGVwZW5kZW50c1wiLCBbXSwgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICB9KTtcclxufSk7XHJcbmFwcC5nZXQoXCIvYXBpL2RlcGVuZGVudC86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJzZWxlY3QgKiBmcm9tIGRlcGVuZGVudHMgd2hlcmUgZGVwZW5kZW50X2lkPSQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucG9zdChcIi9hcGkvZGVwZW5kZW50XCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgZGVwZW5kZW50X2lkLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHJlbGF0aW9uc2hpcCwgZW1wbG95ZWVfaWQgfSA9XHJcbiAgICByZXEuYm9keTtcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJpbnNlcnQgaW50byBkZXBlbmRlbnRzIChkZXBlbmRlbnRfaWQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcmVsYXRpb25zaGlwLCBlbXBsb3llZV9pZCkgdmFsdWVzICgkMSwkMiwkMywkNCwkNSlcIixcclxuICAgIFtkZXBlbmRlbnRfaWQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcmVsYXRpb25zaGlwLCBlbXBsb3llZV9pZF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucHV0KFwiL2FwaS9kZXBlbmRlbnQvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgY29uc3QgeyBkZXBlbmRlbnRfaWQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcmVsYXRpb25zaGlwLCBlbXBsb3llZV9pZCB9ID1cclxuICAgIHJlcS5ib2R5O1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcInVwZGF0ZSBkZXBlbmRlbnRzIHNldCBkZXBlbmRlbnRfaWQ9JDEsIGZpcnN0X25hbWU9JDIsIGxhc3RfbmFtZT0kMywgcmVsYXRpb25zaGlwPSQ0LCBlbXBsb3llZV9pZD0kNSB3aGVyZSBkZXBlbmRlbnRfaWQ9JDZcIixcclxuICAgIFtkZXBlbmRlbnRfaWQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcmVsYXRpb25zaGlwLCBlbXBsb3llZV9pZCwgaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZShcIi9hcGkvZGVwZW5kZW50LzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIHBvb2wucXVlcnkoXHJcbiAgICBcImRlbGV0ZSBmcm9tIGRlcGVuZGVudHMgd2hlcmUgZGVwZW5kZW50X2lkPSQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuXHJcbi8vIGVtcGxveWVlc1xyXG5hcHAuZ2V0KFwiL2FwaS9lbXBsb3llZS9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcG9vbC5xdWVyeShcInNlbGVjdCAqIGZyb20gZW1wbG95ZWVzXCIsIFtdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gIH0pO1xyXG59KTtcclxuYXBwLmdldChcIi9hcGkvZW1wbG95ZWUvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSBlbXBsb3llZXMgd2hlcmUgZW1wbG95ZWVfaWQ9JDFcIixcclxuICAgIFtpZF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93cyk7XHJcbiAgICB9XHJcbiAgKTtcclxufSk7XHJcbmFwcC5wb3N0KFwiL2FwaS9lbXBsb3llZS9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3Qge1xyXG4gICAgZW1wbG95ZWVfaWQsXHJcbiAgICBmaXJzdF9uYW1lLFxyXG4gICAgbGFzdF9uYW1lLFxyXG4gICAgZW1haWwsXHJcbiAgICBwaG9uZV9udW1iZXIsXHJcbiAgICBoaXJlX2RhdGUsXHJcbiAgICBqb2JfaWQsXHJcbiAgICBzYWxhcnksXHJcbiAgICBtYW5hZ2VyX2lkLFxyXG4gICAgZGVwYXJ0bWVudF9pZCxcclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gZW1wbG95ZWVzIChlbXBsb3llZV9pZCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBlbWFpbCwgcGhvbmVfbnVtYmVyLCBoaXJlX2RhdGUsIGpvYl9pZCwgc2FsYXJ5LCBtYW5hZ2VyX2lkLCBkZXBhcnRtZW50X2lkKSB2YWx1ZXMgKCQxLCQyLCQzLCQ0LCQ1LCQ2LCQ3LCQ4LCQ5LCQxMClcIixcclxuICAgIFtcclxuICAgICAgZW1wbG95ZWVfaWQsXHJcbiAgICAgIGZpcnN0X25hbWUsXHJcbiAgICAgIGxhc3RfbmFtZSxcclxuICAgICAgZW1haWwsXHJcbiAgICAgIHBob25lX251bWJlcixcclxuICAgICAgaGlyZV9kYXRlLFxyXG4gICAgICBqb2JfaWQsXHJcbiAgICAgIHNhbGFyeSxcclxuICAgICAgbWFuYWdlcl9pZCxcclxuICAgICAgZGVwYXJ0bWVudF9pZCxcclxuICAgIF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucHV0KFwiL2FwaS9lbXBsb3llZS86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBjb25zdCB7XHJcbiAgICBlbXBsb3llZV9pZCxcclxuICAgIGZpcnN0X25hbWUsXHJcbiAgICBsYXN0X25hbWUsXHJcbiAgICBlbWFpbCxcclxuICAgIHBob25lX251bWJlcixcclxuICAgIGhpcmVfZGF0ZSxcclxuICAgIGpvYl9pZCxcclxuICAgIHNhbGFyeSxcclxuICAgIG1hbmFnZXJfaWQsXHJcbiAgICBkZXBhcnRtZW50X2lkLFxyXG4gIH0gPSByZXEuYm9keTtcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJ1cGRhdGUgZW1wbG95ZWVzIHNldCBlbXBsb3llZV9pZD0kMSwgZmlyc3RfbmFtZT0kMiwgbGFzdF9uYW1lPSQzLCBlbWFpbD0kNCwgcGhvbmVfbnVtYmVyPSQ1LCBoaXJlX2RhdGU9JDYsIGpvYl9pZD0kNywgc2FsYXJ5PSQ4LCBtYW5hZ2VyX2lkPSQ5LCBkZXBhcnRtZW50X2lkPSQxMCB3aGVyZSBlbXBsb3llZV9pZD0kMTFcIixcclxuICAgIFtcclxuICAgICAgZW1wbG95ZWVfaWQsXHJcbiAgICAgIGZpcnN0X25hbWUsXHJcbiAgICAgIGxhc3RfbmFtZSxcclxuICAgICAgZW1haWwsXHJcbiAgICAgIHBob25lX251bWJlcixcclxuICAgICAgaGlyZV9kYXRlLFxyXG4gICAgICBqb2JfaWQsXHJcbiAgICAgIHNhbGFyeSxcclxuICAgICAgbWFuYWdlcl9pZCxcclxuICAgICAgZGVwYXJ0bWVudF9pZCxcclxuICAgICAgaWQsXHJcbiAgICBdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZShcIi9hcGkvZW1wbG95ZWUvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiZGVsZXRlIGZyb20gZW1wbG95ZWVzIHdoZXJlIGVtcGxveWVlX2lkPSQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuLy8gcHJvamVjdHNcclxuYXBwLmdldChcIi9hcGkvcHJvamVjdFwiLCAocmVxLCByZXMpID0+IHtcclxuICBwb29sLnF1ZXJ5KFwic2VsZWN0ICogZnJvbSBwcm9qZWN0c1wiLCBbXSwgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdC5yb3dzKTtcclxuICB9KTtcclxufSk7XHJcbmFwcC5nZXQoXCIvYXBpL3Byb2plY3QvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSBwcm9qZWN0cyB3aGVyZSBwcm9qX2lkPSQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucG9zdChcIi9hcGkvcHJvamVjdC9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3Qge1xyXG4gICAgcHJval9pZCxcclxuICAgIHByb2pfbmFtZSxcclxuICAgIHByb2pfY3JlYXRlZG9uLFxyXG4gICAgcHJval9kdWVkYXRlLFxyXG4gICAgcHJval9jdXN0X25hbWUsXHJcbiAgICBwcm9qX2Rlc2NyaXB0aW9uLFxyXG4gICAgcHJval9zdGF0dXMsXHJcbiAgICBwcm9qX2Ftb3VudCxcclxuICAgIHByb2pfYWNjb3VudF9tZ3IsXHJcbiAgICBwcm9qX2N1c3RvbWVyLFxyXG4gIH0gPSByZXEuYm9keTtcclxuICBwb29sLnF1ZXJ5KFxyXG4gICAgXCJpbnNlcnQgaW50byBwcm9qZWN0cyAoIHByb2pfaWQsIHByb2pfbmFtZSwgcHJval9jcmVhdGVkb24sIHByb2pfZHVlZGF0ZSwgcHJval9jdXN0X25hbWUscHJval9kZXNjcmlwdGlvbiwgcHJval9zdGF0dXMsIHByb2pfYW1vdW50LCBwcm9qX2FjY291bnRfbWdyLCBwcm9qX2N1c3RvbWVyICkgdmFsdWVzICgkMSwkMiwkMywkNCwkNSwkNiwkNywkOCwkOSwkMTApXCIsXHJcbiAgICBbXHJcbiAgICAgIHByb2pfaWQsXHJcbiAgICAgIHByb2pfbmFtZSxcclxuICAgICAgcHJval9jcmVhdGVkb24sXHJcbiAgICAgIHByb2pfZHVlZGF0ZSxcclxuICAgICAgcHJval9jdXN0X25hbWUsXHJcbiAgICAgIHByb2pfZGVzY3JpcHRpb24sXHJcbiAgICAgIHByb2pfc3RhdHVzLFxyXG4gICAgICBwcm9qX2Ftb3VudCxcclxuICAgICAgcHJval9hY2NvdW50X21ncixcclxuICAgICAgcHJval9jdXN0b21lcixcclxuICAgIF0sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucHV0KFwiL2FwaS9wcm9qZWN0LzppZFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gIGNvbnN0IHtcclxuICAgIHByb2pfaWQsXHJcbiAgICBwcm9qX25hbWUsXHJcbiAgICBwcm9qX2NyZWF0ZWRvbixcclxuICAgIHByb2pfZHVlZGF0ZSxcclxuICAgIHByb2pfY3VzdF9uYW1lLFxyXG4gICAgcHJval9kZXNjcmlwdGlvbixcclxuICAgIHByb2pfc3RhdHVzLFxyXG4gICAgcHJval9hbW91bnQsXHJcbiAgICBwcm9qX2FjY291bnRfbWdyLFxyXG4gICAgcHJval9jdXN0b21lcixcclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwidXBkYXRlIHByb2plY3RzIHNldCBwcm9qX2lkPSQxLCBwcm9qX25hbWU9JDIsIHByb2pfY3JlYXRlZG9uPSQzLCBwcm9qX2R1ZWRhdGU9JDQsIHByb2pfY3VzdF9uYW1lPSQ1LCBwcm9qX2Rlc2NyaXB0aW9uPSQ2LCBwcm9qX3N0YXR1cz0kNywgcHJval9hbW91bnQ9JDgsIHByb2pfYWNjb3VudF9tZ3I9JDksIHByb2pfY3VzdG9tZXI9JDEwIHdoZXJlIHByb2pfaWQ9JDExXCIsXHJcbiAgICBbXHJcbiAgICAgIHByb2pfaWQsXHJcbiAgICAgIHByb2pfbmFtZSxcclxuICAgICAgcHJval9jcmVhdGVkb24sXHJcbiAgICAgIHByb2pfZHVlZGF0ZSxcclxuICAgICAgcHJval9jdXN0X25hbWUsXHJcbiAgICAgIHByb2pfZGVzY3JpcHRpb24sXHJcbiAgICAgIHByb2pfc3RhdHVzLFxyXG4gICAgICBwcm9qX2Ftb3VudCxcclxuICAgICAgcHJval9hY2NvdW50X21ncixcclxuICAgICAgcHJval9jdXN0b21lcixcclxuICAgICAgaWQsXHJcbiAgICBdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICAgIH1cclxuICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZShcIi9hcGkvcHJvamVjdC86aWRcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICBwb29sLnF1ZXJ5KFwiZGVsZXRlIGZyb20gcHJvamVjdHMgd2hlcmUgcHJval9pZD0kMVwiLCBbaWRdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd0NvdW50KTtcclxuICB9KTtcclxufSk7XHJcblxyXG4vLyBQcm9qZWN0IEFzc2lnbWVudHNcclxuYXBwLmdldChcIi9hcGkvcHJvamVjdF9hc3NpZ25tZW50L1wiLCAocmVxLCByZXMpID0+IHtcclxuICBwb29sLnF1ZXJ5KFwic2VsZWN0ICogZnJvbSBwcm9qZWN0X2Fzc2lnbm1lbnRcIiwgW10sIChlcnJvciwgcmVzdWx0KSA9PiB7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93cyk7XHJcbiAgfSk7XHJcbn0pO1xyXG5hcHAuZ2V0KFwiL2FwaS9wcm9qZWN0X2Fzc2lnbm1lbnQvOmlkXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwic2VsZWN0ICogZnJvbSBwcm9qZWN0X2Fzc2lnbm1lbnQgd2hlcmUgcHJhc19wcm9qX2lkPSQxXCIsXHJcbiAgICBbaWRdLFxyXG4gICAgKGVycm9yLCByZXN1bHQpID0+IHtcclxuICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgIH1cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG5hcHAucG9zdChcIi9hcGkvcHJvamVjdF9hc3NpZ25tZW50L1wiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7XHJcbiAgICBwcmFzX3Byb2pfaWQsXHJcbiAgICBwcmFzX2VtcGxveWVlX2lkLFxyXG4gICAgcHJhc19zdGFydGRhdGUsXHJcbiAgICBwcmFzX2VuZGRhdGUsXHJcbiAgICBwcmFzX3N0YXR1cyxcclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgcG9vbC5xdWVyeShcclxuICAgIFwiaW5zZXJ0IGludG8gcHJvamVjdF9hc3NpZ25tZW50IChwcmFzX3Byb2pfaWQsIHByYXNfZW1wbG95ZWVfaWQsIHByYXNfc3RhcnRkYXRlLHByYXNfZW5kZGF0ZSwgcHJhc19zdGF0dXMpIHZhbHVlcyAoJDEsJDIsJDMsJDQsJDUpXCIsXHJcbiAgICBbcHJhc19wcm9qX2lkLCBwcmFzX2VtcGxveWVlX2lkLCBwcmFzX3N0YXJ0ZGF0ZSwgcHJhc19lbmRkYXRlLCBwcmFzX3N0YXR1c10sXHJcbiAgICAoZXJyb3IsIHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXN1bHQucm93Q291bnQpO1xyXG4gICAgfVxyXG4gICk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFDQUEsa0JBQUEsQ0FBT0MsTUFBUDs7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVAsQ0FBY0QsSUFBM0I7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHLElBQUlGLElBQUosQ0FBUztFQUNwQkcsSUFBSSxFQUFFLFdBRGM7RUFFcEJDLElBQUksRUFBRSxVQUZjO0VBR3BCQyxRQUFRLEVBQUUsWUFIVTtFQUlwQkMsUUFBUSxFQUFFLGdCQUpVO0VBS3BCQyxJQUFJLEVBQUU7QUFMYyxDQUFULENBQWI7QUFRQSxJQUFNQyxHQUFHLEdBQUcsSUFBQUMsbUJBQUEsR0FBWjtBQUNBRCxHQUFHLENBQUNFLEdBQUosQ0FBUUQsbUJBQUEsQ0FBUUUsSUFBUixFQUFSO0FBRUEsSUFBTUosSUFBSSxHQUFHSyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBTixHQUFHLENBQUNPLE1BQUosQ0FBV1IsSUFBWCxFQUFpQixZQUFNO0VBQ3JCUyxPQUFPLENBQUNDLElBQVIsb0NBQXlDVixJQUF6QztBQUNELENBRkQsRSxDQUlBOztBQUNBQyxHQUFHLENBQUNVLEdBQUosQ0FBUSxj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","map":{"version":3,"names":["dotenv","config","Pool","require","pool","host","user","password","database","port","app","express","use","json","process","env","PORT","listen","console","info","get","req","res","query","error","result","status","rows","id","params","post","region_name","body","rowCount","put","name","country_id","country_name","region_id","location_id","street_address","postal_code","city","state_province","department_id","department_name","job_id","min_salary","max_salary","job_title","dependent_id","first_name","last_name","relationship","employee_id","email","phone_number","hire_date","salary","manager_id","proj_id","proj_name","proj_createdon","proj_duedate","proj_cust_name","proj_description","proj_status","proj_amount","proj_account_mgr","proj_customer","pras_proj_id","pras_employee_id","pras_startdate","pras_enddate","pras_status"],"sourceRoot":"E:\\Belajar\\nodeJS_Batch_15\\server\\","sources":["index.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\nimport express, { query } from \"express\";\r\ndotenv.config();\r\n\r\nconst Pool = require(\"pg\").Pool;\r\nconst pool = new Pool({\r\n  host: \"localhost\",\r\n  user: \"postgres\",\r\n  password: \"lisman1922\",\r\n  database: \"quiz1_database\",\r\n  port: 5432,\r\n});\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\nconst port = process.env.PORT || 3003;\r\napp.listen(port, () => {\r\n  console.info(`Server listening on port ${port}`);\r\n});\r\n\r\n// app untuk regions\r\napp.get(\"/api/region/\", (req, res) => {\r\n  pool.query(\"select * from regions\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\n\r\napp.get(\"/api/region/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from regions where region_id = $1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\n\r\napp.post(\"/api/region/\", (req, res) => {\r\n  const { region_name } = req.body;\r\n  pool.query(\r\n    \"insert into regions (region_name) values ($1)\",\r\n    [region_name],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/region/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const { name } = req.body;\r\n  pool.query(\r\n    \"update regions set region_name=$1 where region_id=$2\",\r\n    [name, id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/region/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from regions where region_id=$1 \",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n\r\n// app countries\r\napp.get(\"/api/country\", (req, res) => {\r\n  pool.query(\"select * from countries\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/country/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from countries where country_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/country/\", (req, res) => {\r\n  const { country_id, country_name, region_id } = req.body;\r\n  pool.query(\r\n    \"insert into countries (country_id, country_name, region_id) values ($1,$2,$3)\",\r\n    [country_id, country_name, region_id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/country/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const { country_id, name, region_id } = req.body;\r\n  pool.query(\r\n    \"update countries set country_id=$1, country_name=$2, region_id=$3 where country_id=$4\",\r\n    [country_id, name, region_id, id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/country/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from countries where country_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n\r\n// app untuk  Locations\r\napp.get(\"/api/location/\", (req, res) => {\r\n  pool.query(\"select * from locations\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/location/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from locations where location_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/location/\", (req, res) => {\r\n  const {\r\n    location_id,\r\n    street_address,\r\n    postal_code,\r\n    city,\r\n    state_province,\r\n    country_id,\r\n  } = req.body;\r\n  pool.query(\r\n    \"insert into locations (location_id, street_address, postal_code, city, state_province, country_id) values ($1,$2,$3,$4,$5,$6)\",\r\n    [\r\n      location_id,\r\n      street_address,\r\n      postal_code,\r\n      city,\r\n      state_province,\r\n      country_id,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/location/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const {\r\n    location_id,\r\n    street_address,\r\n    postal_code,\r\n    city,\r\n    state_province,\r\n    country_id,\r\n  } = req.body;\r\n  pool.query(\r\n    \"update locations set location_id=$1, street_address=$2, postal_code=$3, city=$4, state_province=$5, country_id=$6 where location_id=$7 \",\r\n    [\r\n      location_id,\r\n      street_address,\r\n      postal_code,\r\n      city,\r\n      state_province,\r\n      country_id,\r\n      id,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/location/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from locations where location_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n\r\n// departments\r\napp.get(\"/api/department/\", (req, res) => {\r\n  pool.query(\"select * from departments\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/department/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from departments where department_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/department/\", (req, res) => {\r\n  const { department_id, department_name, location_id } = req.body;\r\n  pool.query(\r\n    \"insert into departments (department_id, department_name, location_id) values ($1,$2,$3) \",\r\n    [department_id, department_name, location_id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/department/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const { department_id, department_name, location_id } = req.body;\r\n  pool.query(\r\n    \"update departments set department_id=$1, department_name=$2, location_id=$3 where department_id=$4 \",\r\n    [department_id, department_name, location_id, id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/department/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from departments where department_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n\r\n// jobs\r\napp.get(\"/api/job/\", (req, res) => {\r\n  pool.query(\"select * from jobs\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/job/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\"select * from jobs where job_id=$1\", [id], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.post(\"/api/job/\", (req, res) => {\r\n  const { job_id, min_salary, max_salary, job_title } = req.body;\r\n  pool.query(\r\n    \"insert into jobs (job_id, min_salary, max_salary, job_title) values ($1,$2,$3,$4)\",\r\n    [job_id, min_salary, max_salary, job_title],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/job/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const { job_id, min_salary, max_salary, job_title } = req.body;\r\n  pool.query(\r\n    \"update jobs set job_id=$1, min_salary=$2, max_salary=$3, job_title=$4 where job_id=$5\",\r\n    [job_id, min_salary, max_salary, job_title, id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/job/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\"delete from jobs where job_id=$1\", [id], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rowCount);\r\n  });\r\n});\r\n\r\n// dependents\r\napp.get(\"/api/dependent/\", (req, res) => {\r\n  pool.query(\"select * from dependents\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/dependent/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from dependents where dependent_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/dependent\", (req, res) => {\r\n  const { dependent_id, first_name, last_name, relationship, employee_id } =\r\n    req.body;\r\n  pool.query(\r\n    \"insert into dependents (dependent_id, first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4,$5)\",\r\n    [dependent_id, first_name, last_name, relationship, employee_id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/dependent/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const { dependent_id, first_name, last_name, relationship, employee_id } =\r\n    req.body;\r\n  pool.query(\r\n    \"update dependents set dependent_id=$1, first_name=$2, last_name=$3, relationship=$4, employee_id=$5 where dependent_id=$6\",\r\n    [dependent_id, first_name, last_name, relationship, employee_id, id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/dependent/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from dependents where dependent_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n\r\n// employees\r\napp.get(\"/api/employee/\", (req, res) => {\r\n  pool.query(\"select * from employees\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/employee/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from employees where employee_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/employee/\", (req, res) => {\r\n  const {\r\n    employee_id,\r\n    first_name,\r\n    last_name,\r\n    email,\r\n    phone_number,\r\n    hire_date,\r\n    job_id,\r\n    salary,\r\n    manager_id,\r\n    department_id,\r\n  } = req.body;\r\n  pool.query(\r\n    \"insert into employees (employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)\",\r\n    [\r\n      employee_id,\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      phone_number,\r\n      hire_date,\r\n      job_id,\r\n      salary,\r\n      manager_id,\r\n      department_id,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/employee/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const {\r\n    employee_id,\r\n    first_name,\r\n    last_name,\r\n    email,\r\n    phone_number,\r\n    hire_date,\r\n    job_id,\r\n    salary,\r\n    manager_id,\r\n    department_id,\r\n  } = req.body;\r\n  pool.query(\r\n    \"update employees set employee_id=$1, first_name=$2, last_name=$3, email=$4, phone_number=$5, hire_date=$6, job_id=$7, salary=$8, manager_id=$9, department_id=$10 where employee_id=$11\",\r\n    [\r\n      employee_id,\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      phone_number,\r\n      hire_date,\r\n      job_id,\r\n      salary,\r\n      manager_id,\r\n      department_id,\r\n      id,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/employee/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"delete from employees where employee_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n// projects\r\napp.get(\"/api/project\", (req, res) => {\r\n  pool.query(\"select * from projects\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/project/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from projects where proj_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/project/\", (req, res) => {\r\n  const {\r\n    proj_id,\r\n    proj_name,\r\n    proj_createdon,\r\n    proj_duedate,\r\n    proj_cust_name,\r\n    proj_description,\r\n    proj_status,\r\n    proj_amount,\r\n    proj_account_mgr,\r\n    proj_customer,\r\n  } = req.body;\r\n  pool.query(\r\n    \"insert into projects ( proj_id, proj_name, proj_createdon, proj_duedate, proj_cust_name,proj_description, proj_status, proj_amount, proj_account_mgr, proj_customer ) values ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)\",\r\n    [\r\n      proj_id,\r\n      proj_name,\r\n      proj_createdon,\r\n      proj_duedate,\r\n      proj_cust_name,\r\n      proj_description,\r\n      proj_status,\r\n      proj_amount,\r\n      proj_account_mgr,\r\n      proj_customer,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.put(\"/api/project/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  const {\r\n    proj_id,\r\n    proj_name,\r\n    proj_createdon,\r\n    proj_duedate,\r\n    proj_cust_name,\r\n    proj_description,\r\n    proj_status,\r\n    proj_amount,\r\n    proj_account_mgr,\r\n    proj_customer,\r\n  } = req.body;\r\n  pool.query(\r\n    \"update projects set proj_id=$1, proj_name=$2, proj_createdon=$3, proj_duedate=$4, proj_cust_name=$5, proj_description=$6, proj_status=$7, proj_amount=$8, proj_account_mgr=$9, proj_customer=$10 where proj_id=$11\",\r\n    [\r\n      proj_id,\r\n      proj_name,\r\n      proj_createdon,\r\n      proj_duedate,\r\n      proj_cust_name,\r\n      proj_description,\r\n      proj_status,\r\n      proj_amount,\r\n      proj_account_mgr,\r\n      proj_customer,\r\n      id,\r\n    ],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\napp.delete(\"/api/project/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\"delete from projects where proj_id=$1\", [id], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rowCount);\r\n  });\r\n});\r\n\r\n// Project Assigments\r\napp.get(\"/api/project_assignment/\", (req, res) => {\r\n  pool.query(\"select * from project_assignment\", [], (error, result) => {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    res.status(200).json(result.rows);\r\n  });\r\n});\r\napp.get(\"/api/project_assignment/:id\", (req, res) => {\r\n  const { id } = req.params;\r\n  pool.query(\r\n    \"select * from project_assignment where pras_proj_id=$1\",\r\n    [id],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rows);\r\n    }\r\n  );\r\n});\r\napp.post(\"/api/project_assignment/\", (req, res) => {\r\n  const {\r\n    pras_proj_id,\r\n    pras_employee_id,\r\n    pras_startdate,\r\n    pras_enddate,\r\n    pras_status,\r\n  } = req.body;\r\n  pool.query(\r\n    \"insert into project_assignment (pras_proj_id, pras_employee_id, pras_startdate,pras_enddate, pras_status) values ($1,$2,$3,$4,$5)\",\r\n    [pras_proj_id, pras_employee_id, pras_startdate, pras_enddate, pras_status],\r\n    (error, result) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      res.status(200).json(result.rowCount);\r\n    }\r\n  );\r\n});\r\n"],"mappings":"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"}},"mtime":1655403049161}}